name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Ejecutar diariamente a medianoche
  workflow_dispatch:  # Permite la ejecución manual

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v2

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Construir imagen Docker
      run: docker build --tag webserver3 .

    - name: Ejecutar contenedor Docker
      run: |
        docker run -d --name servidor_web -p 8080:80 webserver3
        sleep 10  # Esperar a que el contenedor esté listo

    - name: Test - Verificar respuesta del servidor
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080)
        if [ $response = "200" ]; then
          echo "Test pasado: El servidor responde correctamente"
        else
          echo "Test fallido: El servidor no responde como se esperaba"
          exit 1
        fi

    - name: Iniciar sesión en Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.NAME }}
        password: ${{ secrets.PASS }}

    - name: Etiquetar imagen Docker
      run: docker tag webserver3:latest ykzagorgonita/desafio13:v4

    - name: Subir imagen a Docker Hub
      run: docker push ykzagorgonita/desafio13:v4

    - name: Limpiar - Detener y eliminar contenedor
      if: always()
      run: |
        docker stop servidor_web
        docker rm servidor_web
